# coding: utf-8

"""
    PhotoPrism API

    API request bodies and responses are usually JSON-encoded, except for binary data and some of the OAuth2 endpoints. Note that the `Content-Type` header must be set to `application/json` for this, as the request may otherwise fail with error 400. When clients have a valid access token, e.g. obtained through the `POST /api/v1/session` or `POST /api/v1/oauth/token` endpoint, they can use a standard Bearer Authorization header to authenticate their requests. Submitting the access token with a custom `X-Auth-Token` header is supported as well.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from photoprism_client.api.labels_api import LabelsApi


class TestLabelsApi(unittest.TestCase):
    """LabelsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LabelsApi()

    def tearDown(self) -> None:
        pass

    def test_add_photo_label(self) -> None:
        """Test case for add_photo_label

        adds a label to a photo
        """
        pass

    def test_batch_labels_delete(self) -> None:
        """Test case for batch_labels_delete

        deletes multiple labels
        """
        pass

    def test_dislike_label(self) -> None:
        """Test case for dislike_label

        removes favorite flag from a label
        """
        pass

    def test_label_cover(self) -> None:
        """Test case for label_cover

        returns a label cover image
        """
        pass

    def test_like_label(self) -> None:
        """Test case for like_label

        sets favorite flag for a label
        """
        pass

    def test_remove_photo_label(self) -> None:
        """Test case for remove_photo_label

        removes a label from a photo
        """
        pass

    def test_search_labels(self) -> None:
        """Test case for search_labels

        finds and returns labels as JSON
        """
        pass

    def test_update_label(self) -> None:
        """Test case for update_label

        updates label name
        """
        pass

    def test_update_photo_label(self) -> None:
        """Test case for update_photo_label

        changes a photo label
        """
        pass


if __name__ == '__main__':
    unittest.main()
