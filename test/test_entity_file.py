# coding: utf-8

"""
    PhotoPrism API

    API request bodies and responses are usually JSON-encoded, except for binary data and some of the OAuth2 endpoints. Note that the `Content-Type` header must be set to `application/json` for this, as the request may otherwise fail with error 400. When clients have a valid access token, e.g. obtained through the `POST /api/v1/session` or `POST /api/v1/oauth/token` endpoint, they can use a standard Bearer Authorization header to authenticate their requests. Submitting the access token with a custom `X-Auth-Token` header is supported as well.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from photoprism_client.models.entity_file import EntityFile

class TestEntityFile(unittest.TestCase):
    """EntityFile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityFile:
        """Test EntityFile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityFile`
        """
        model = EntityFile()
        if include_optional:
            return EntityFile(
                aspect_ratio = 1.337,
                chroma = 56,
                codec = '',
                color_profile = '',
                colors = '',
                created_at = '',
                created_in = 56,
                deleted_at = '',
                diff = 56,
                duration = -9223372036854775808,
                error = '',
                fps = 1.337,
                file_type = '',
                frames = 56,
                hdr = True,
                hash = '',
                height = 56,
                instance_id = '',
                luminance = '',
                main_color = '',
                media_id = '',
                media_type = '',
                media_utc = 56,
                mime = '',
                missing = True,
                mod_time = 56,
                name = '',
                orientation = 56,
                orientation_src = '',
                original_name = '',
                photo_uid = '',
                portrait = True,
                primary = True,
                projection = '',
                published_at = '',
                root = '',
                sidecar = True,
                size = 56,
                software = '',
                taken_at = '',
                time_index = '',
                uid = '',
                updated_at = '',
                updated_in = 56,
                video = True,
                watermark = True,
                width = 56
            )
        else:
            return EntityFile(
        )
        """

    def testEntityFile(self):
        """Test EntityFile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
