# coding: utf-8

"""
    PhotoPrism API

    API request bodies and responses are usually JSON-encoded, except for binary data and some of the OAuth2 endpoints. Note that the `Content-Type` header must be set to `application/json` for this, as the request may otherwise fail with error 400. When clients have a valid access token, e.g. obtained through the `POST /api/v1/session` or `POST /api/v1/oauth/token` endpoint, they can use a standard Bearer Authorization header to authenticate their requests. Submitting the access token with a custom `X-Auth-Token` header is supported as well.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from photoprism_client.models.config_client_config import ConfigClientConfig

class TestConfigClientConfig(unittest.TestCase):
    """ConfigClientConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigClientConfig:
        """Test ConfigClientConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigClientConfig`
        """
        model = ConfigClientConfig()
        if include_optional:
            return ConfigClientConfig(
                about = '',
                acl = {
                    'key' : {
                        'key' : True
                        }
                    },
                album_categories = [
                    ''
                    ],
                albums = [
                    photoprism_client.models.entity/album.entity.Album(
                        caption = '',
                        category = '',
                        country = '',
                        created_at = '',
                        created_by = '',
                        day = 56,
                        deleted_at = '',
                        description = '',
                        favorite = True,
                        filter = '',
                        id = 56,
                        location = '',
                        month = 56,
                        notes = '',
                        order = '',
                        parent_uid = '',
                        path = '',
                        private = True,
                        published_at = '',
                        slug = '',
                        state = '',
                        template = '',
                        thumb = '',
                        thumb_src = '',
                        title = '',
                        type = '',
                        uid = '',
                        updated_at = '',
                        year = 56, )
                    ],
                api_uri = '',
                app_color = '',
                app_icon = '',
                app_mode = '',
                app_name = '',
                auth_mode = '',
                base_uri = '',
                cameras = [
                    photoprism_client.models.entity/camera.entity.Camera(
                        description = '',
                        id = 56,
                        make = '',
                        model = '',
                        name = '',
                        notes = '',
                        slug = '',
                        type = '', )
                    ],
                categories = [
                    photoprism_client.models.config/category_label.config.CategoryLabel(
                        name = '',
                        slug = '',
                        uid = '', )
                    ],
                clip = 56,
                colors = [
                    {
                        'key' : ''
                        }
                    ],
                content_uri = '',
                copyright = '',
                count = photoprism_client.models.config/client_counts.config.ClientCounts(
                    albums = 56,
                    all = 56,
                    archived = 56,
                    cameras = 56,
                    countries = 56,
                    favorites = 56,
                    files = 56,
                    folders = 56,
                    hidden = 56,
                    label_max_photos = 56,
                    labels = 56,
                    lenses = 56,
                    live = 56,
                    moments = 56,
                    months = 56,
                    people = 56,
                    photos = 56,
                    places = 56,
                    private = 56,
                    private_albums = 56,
                    private_folders = 56,
                    private_moments = 56,
                    private_months = 56,
                    private_states = 56,
                    review = 56,
                    states = 56,
                    stories = 56,
                    videos = 56, ),
                countries = [
                    photoprism_client.models.entity/country.entity.Country(
                        description = '',
                        id = '',
                        name = '',
                        notes = '',
                        slug = '', )
                    ],
                css_uri = '',
                customer = '',
                debug = True,
                demo = True,
                disable = photoprism_client.models.config/client_disable.config.ClientDisable(
                    backups = True,
                    classification = True,
                    darktable = True,
                    exiftool = True,
                    faces = True,
                    ffmpeg = True,
                    heifconvert = True,
                    imagemagick = True,
                    jpegxl = True,
                    places = True,
                    raw = True,
                    rawtherapee = True,
                    restart = True,
                    settings = True,
                    sips = True,
                    tensorflow = True,
                    vectors = True,
                    vips = True,
                    webdav = True, ),
                download_token = '',
                edition = '',
                experimental = True,
                ext = { },
                flags = '',
                js_uri = '',
                legal_info = '',
                legal_url = '',
                lenses = [
                    photoprism_client.models.entity/lens.entity.Lens(
                        description = '',
                        id = 56,
                        make = '',
                        model = '',
                        name = '',
                        notes = '',
                        slug = '',
                        type = '', )
                    ],
                login_uri = '',
                manifest_uri = '',
                map_key = '',
                membership = '',
                mode = '',
                name = '',
                password_length = 56,
                password_reset_uri = '',
                people = [
                    photoprism_client.models.entity/person.entity.Person(
                        alias = '',
                        favorite = True,
                        hidden = True,
                        name = '',
                        uid = '', )
                    ],
                pos = photoprism_client.models.config/client_position.config.ClientPosition(
                    cid = '',
                    lat = 1.337,
                    lng = 1.337,
                    uid = '',
                    utc = '', ),
                preview_token = '',
                public = True,
                readonly = True,
                register_uri = '',
                restart = True,
                server = photoprism_client.models.env/resources.env.Resources(
                    cores = 56,
                    memory = photoprism_client.models.env_resources_memory.env_Resources_memory(
                        free = 56,
                        info = '',
                        reserved = 56,
                        total = 56,
                        used = 56, ),
                    routines = 56, ),
                settings = photoprism_client.models.customize/settings.customize.Settings(
                    download = photoprism_client.models.customize/download_settings.customize.DownloadSettings(
                        disabled = True,
                        media_raw = True,
                        media_sidecar = True,
                        name = 'file',
                        originals = True, ),
                    features = photoprism_client.models.customize/feature_settings.customize.FeatureSettings(
                        account = True,
                        albums = True,
                        archive = True,
                        delete = True,
                        edit = True,
                        estimates = True,
                        favorites = True,
                        files = True,
                        folders = True,
                        import = True,
                        labels = True,
                        library = True,
                        logs = True,
                        moments = True,
                        people = True,
                        places = True,
                        private = True,
                        ratings = True,
                        reactions = True,
                        review = True,
                        search = True,
                        services = True,
                        settings = True,
                        share = True,
                        upload = True,
                        videos = True, ),
                    import = photoprism_client.models.customize/import_settings.customize.ImportSettings(
                        move = True,
                        path = '', ),
                    index = photoprism_client.models.customize/index_settings.customize.IndexSettings(
                        convert = True,
                        path = '',
                        rescan = True,
                        skip_archived = True, ),
                    maps = photoprism_client.models.customize/maps_settings.customize.MapsSettings(
                        animate = 56,
                        style = '', ),
                    search = photoprism_client.models.customize/search_settings.customize.SearchSettings(
                        batch_size = 56, ),
                    share = photoprism_client.models.customize/share_settings.customize.ShareSettings(
                        title = '', ),
                    stack = photoprism_client.models.customize/stack_settings.customize.StackSettings(
                        meta = True,
                        uuid = True, ),
                    templates = photoprism_client.models.customize/template_settings.customize.TemplateSettings(
                        default = '', ),
                    ui = photoprism_client.models.customize/ui_settings.customize.UISettings(
                        language = '',
                        scrollbar = True,
                        theme = '',
                        time_zone = '',
                        zoom = True, ), ),
                site_author = '',
                site_caption = '',
                site_description = '',
                site_domain = '',
                site_preview = '',
                site_title = '',
                site_url = '',
                sponsor = True,
                static_uri = '',
                test = True,
                thumbs = [
                    photoprism_client.models.config/thumb_size.config.ThumbSize(
                        h = 56,
                        size = '',
                        usage = '',
                        w = 56, )
                    ],
                tier = 56,
                trace = True,
                upload_nsfw = True,
                users_path = '',
                version = '',
                video_uri = '',
                wallpaper_uri = '',
                years = [
                    56
                    ]
            )
        else:
            return ConfigClientConfig(
        )
        """

    def testConfigClientConfig(self):
        """Test ConfigClientConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
